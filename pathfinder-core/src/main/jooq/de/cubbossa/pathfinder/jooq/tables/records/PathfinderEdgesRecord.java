/*
 * This file is generated by jOOQ.
 */
package de.cubbossa.pathfinder.jooq.tables.records;


import de.cubbossa.pathfinder.jooq.tables.PathfinderEdges;

import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class PathfinderEdgesRecord extends UpdatableRecordImpl<PathfinderEdgesRecord> implements Record3<UUID, UUID, Double> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>pathfinder_edges.start_id</code>.
     */
    public void setStartId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>pathfinder_edges.start_id</code>.
     */
    public UUID getStartId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>pathfinder_edges.end_id</code>.
     */
    public void setEndId(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>pathfinder_edges.end_id</code>.
     */
    public UUID getEndId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>pathfinder_edges.weight</code>.
     */
    public void setWeight(Double value) {
        set(2, value);
    }

    /**
     * Getter for <code>pathfinder_edges.weight</code>.
     */
    public Double getWeight() {
        return (Double) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<UUID, UUID> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<UUID, UUID, Double> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<UUID, UUID, Double> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return PathfinderEdges.PATHFINDER_EDGES.START_ID;
    }

    @Override
    public Field<UUID> field2() {
        return PathfinderEdges.PATHFINDER_EDGES.END_ID;
    }

    @Override
    public Field<Double> field3() {
        return PathfinderEdges.PATHFINDER_EDGES.WEIGHT;
    }

    @Override
    public UUID component1() {
        return getStartId();
    }

    @Override
    public UUID component2() {
        return getEndId();
    }

    @Override
    public Double component3() {
        return getWeight();
    }

    @Override
    public UUID value1() {
        return getStartId();
    }

    @Override
    public UUID value2() {
        return getEndId();
    }

    @Override
    public Double value3() {
        return getWeight();
    }

    @Override
    public PathfinderEdgesRecord value1(UUID value) {
        setStartId(value);
        return this;
    }

    @Override
    public PathfinderEdgesRecord value2(UUID value) {
        setEndId(value);
        return this;
    }

    @Override
    public PathfinderEdgesRecord value3(Double value) {
        setWeight(value);
        return this;
    }

    @Override
    public PathfinderEdgesRecord values(UUID value1, UUID value2, Double value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PathfinderEdgesRecord
     */
    public PathfinderEdgesRecord() {
        super(PathfinderEdges.PATHFINDER_EDGES);
    }

    /**
     * Create a detached, initialised PathfinderEdgesRecord
     */
    public PathfinderEdgesRecord(UUID startId, UUID endId, Double weight) {
        super(PathfinderEdges.PATHFINDER_EDGES);

        setStartId(startId);
        setEndId(endId);
        setWeight(weight);
    }
}
