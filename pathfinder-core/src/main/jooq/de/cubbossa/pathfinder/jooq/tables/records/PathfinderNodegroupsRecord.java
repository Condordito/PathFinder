/*
 * This file is generated by jOOQ.
 */
package de.cubbossa.pathfinder.jooq.tables.records;


import de.cubbossa.pathfinder.jooq.tables.PathfinderNodegroups;

import org.bukkit.NamespacedKey;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PathfinderNodegroupsRecord extends UpdatableRecordImpl<PathfinderNodegroupsRecord> implements Record6<NamespacedKey, String, String, Boolean, Boolean, Double> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>pathfinder_nodegroups.key</code>.
     */
    public void setKey(NamespacedKey value) {
        set(0, value);
    }

    /**
     * Getter for <code>pathfinder_nodegroups.key</code>.
     */
    public NamespacedKey getKey() {
        return (NamespacedKey) get(0);
    }

    /**
     * Setter for <code>pathfinder_nodegroups.name_format</code>.
     */
    public void setNameFormat(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>pathfinder_nodegroups.name_format</code>.
     */
    public String getNameFormat() {
        return (String) get(1);
    }

    /**
     * Setter for <code>pathfinder_nodegroups.permission</code>.
     */
    public void setPermission(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>pathfinder_nodegroups.permission</code>.
     */
    public String getPermission() {
        return (String) get(2);
    }

    /**
     * Setter for <code>pathfinder_nodegroups.navigable</code>.
     */
    public void setNavigable(Boolean value) {
        set(3, value);
    }

    /**
     * Getter for <code>pathfinder_nodegroups.navigable</code>.
     */
    public Boolean getNavigable() {
        return (Boolean) get(3);
    }

    /**
     * Setter for <code>pathfinder_nodegroups.discoverable</code>.
     */
    public void setDiscoverable(Boolean value) {
        set(4, value);
    }

    /**
     * Getter for <code>pathfinder_nodegroups.discoverable</code>.
     */
    public Boolean getDiscoverable() {
        return (Boolean) get(4);
    }

    /**
     * Setter for <code>pathfinder_nodegroups.find_distance</code>.
     */
    public void setFindDistance(Double value) {
        set(5, value);
    }

    /**
     * Getter for <code>pathfinder_nodegroups.find_distance</code>.
     */
    public Double getFindDistance() {
        return (Double) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<NamespacedKey> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<NamespacedKey, String, String, Boolean, Boolean, Double> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<NamespacedKey, String, String, Boolean, Boolean, Double> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<NamespacedKey> field1() {
        return PathfinderNodegroups.PATHFINDER_NODEGROUPS.KEY;
    }

    @Override
    public Field<String> field2() {
        return PathfinderNodegroups.PATHFINDER_NODEGROUPS.NAME_FORMAT;
    }

    @Override
    public Field<String> field3() {
        return PathfinderNodegroups.PATHFINDER_NODEGROUPS.PERMISSION;
    }

    @Override
    public Field<Boolean> field4() {
        return PathfinderNodegroups.PATHFINDER_NODEGROUPS.NAVIGABLE;
    }

    @Override
    public Field<Boolean> field5() {
        return PathfinderNodegroups.PATHFINDER_NODEGROUPS.DISCOVERABLE;
    }

    @Override
    public Field<Double> field6() {
        return PathfinderNodegroups.PATHFINDER_NODEGROUPS.FIND_DISTANCE;
    }

    @Override
    public NamespacedKey component1() {
        return getKey();
    }

    @Override
    public String component2() {
        return getNameFormat();
    }

    @Override
    public String component3() {
        return getPermission();
    }

    @Override
    public Boolean component4() {
        return getNavigable();
    }

    @Override
    public Boolean component5() {
        return getDiscoverable();
    }

    @Override
    public Double component6() {
        return getFindDistance();
    }

    @Override
    public NamespacedKey value1() {
        return getKey();
    }

    @Override
    public String value2() {
        return getNameFormat();
    }

    @Override
    public String value3() {
        return getPermission();
    }

    @Override
    public Boolean value4() {
        return getNavigable();
    }

    @Override
    public Boolean value5() {
        return getDiscoverable();
    }

    @Override
    public Double value6() {
        return getFindDistance();
    }

    @Override
    public PathfinderNodegroupsRecord value1(NamespacedKey value) {
        setKey(value);
        return this;
    }

    @Override
    public PathfinderNodegroupsRecord value2(String value) {
        setNameFormat(value);
        return this;
    }

    @Override
    public PathfinderNodegroupsRecord value3(String value) {
        setPermission(value);
        return this;
    }

    @Override
    public PathfinderNodegroupsRecord value4(Boolean value) {
        setNavigable(value);
        return this;
    }

    @Override
    public PathfinderNodegroupsRecord value5(Boolean value) {
        setDiscoverable(value);
        return this;
    }

    @Override
    public PathfinderNodegroupsRecord value6(Double value) {
        setFindDistance(value);
        return this;
    }

    @Override
    public PathfinderNodegroupsRecord values(NamespacedKey value1, String value2, String value3, Boolean value4, Boolean value5, Double value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PathfinderNodegroupsRecord
     */
    public PathfinderNodegroupsRecord() {
        super(PathfinderNodegroups.PATHFINDER_NODEGROUPS);
    }

    /**
     * Create a detached, initialised PathfinderNodegroupsRecord
     */
    public PathfinderNodegroupsRecord(NamespacedKey key, String nameFormat, String permission, Boolean navigable, Boolean discoverable, Double findDistance) {
        super(PathfinderNodegroups.PATHFINDER_NODEGROUPS);

        setKey(key);
        setNameFormat(nameFormat);
        setPermission(permission);
        setNavigable(navigable);
        setDiscoverable(discoverable);
        setFindDistance(findDistance);
    }
}
