/*
 * This file is generated by jOOQ.
 */
package de.cubbossa.pathfinder.jooq.tables.records;


import de.cubbossa.pathapi.misc.NamespacedKey;
import de.cubbossa.pathfinder.jooq.tables.PathfinderSearchTerms;
import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class PathfinderSearchTermsRecord extends UpdatableRecordImpl<PathfinderSearchTermsRecord> implements Record2<NamespacedKey, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>pathfinder_search_terms.group_key</code>.
     */
    public void setGroupKey(NamespacedKey value) {
        set(0, value);
    }

    /**
     * Getter for <code>pathfinder_search_terms.group_key</code>.
     */
    public NamespacedKey getGroupKey() {
        return (NamespacedKey) get(0);
    }

    /**
     * Setter for <code>pathfinder_search_terms.search_term</code>.
     */
    public void setSearchTerm(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>pathfinder_search_terms.search_term</code>.
     */
    public String getSearchTerm() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<NamespacedKey, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<NamespacedKey, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<NamespacedKey, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<NamespacedKey> field1() {
        return PathfinderSearchTerms.PATHFINDER_SEARCH_TERMS.GROUP_KEY;
    }

    @Override
    public Field<String> field2() {
        return PathfinderSearchTerms.PATHFINDER_SEARCH_TERMS.SEARCH_TERM;
    }

    @Override
    public NamespacedKey component1() {
        return getGroupKey();
    }

    @Override
    public String component2() {
        return getSearchTerm();
    }

    @Override
    public NamespacedKey value1() {
        return getGroupKey();
    }

    @Override
    public String value2() {
        return getSearchTerm();
    }

    @Override
    public PathfinderSearchTermsRecord value1(NamespacedKey value) {
        setGroupKey(value);
        return this;
    }

    @Override
    public PathfinderSearchTermsRecord value2(String value) {
        setSearchTerm(value);
        return this;
    }

    @Override
    public PathfinderSearchTermsRecord values(NamespacedKey value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PathfinderSearchTermsRecord
     */
    public PathfinderSearchTermsRecord() {
        super(PathfinderSearchTerms.PATHFINDER_SEARCH_TERMS);
    }

    /**
     * Create a detached, initialised PathfinderSearchTermsRecord
     */
    public PathfinderSearchTermsRecord(NamespacedKey groupKey, String searchTerm) {
        super(PathfinderSearchTerms.PATHFINDER_SEARCH_TERMS);

        setGroupKey(groupKey);
        setSearchTerm(searchTerm);
    }
}
