/*
 * This file is generated by jOOQ.
 */
package de.cubbossa.pathfinder.jooq.tables.records;


import de.cubbossa.pathfinder.jooq.tables.PathfinderNodegroupNodes;

import org.bukkit.NamespacedKey;
import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PathfinderNodegroupNodesRecord extends UpdatableRecordImpl<PathfinderNodegroupNodesRecord> implements Record2<NamespacedKey, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>pathfinder_nodegroup_nodes.group_key</code>.
     */
    public void setGroupKey(NamespacedKey value) {
        set(0, value);
    }

    /**
     * Getter for <code>pathfinder_nodegroup_nodes.group_key</code>.
     */
    public NamespacedKey getGroupKey() {
        return (NamespacedKey) get(0);
    }

    /**
     * Setter for <code>pathfinder_nodegroup_nodes.node_id</code>.
     */
    public void setNodeId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>pathfinder_nodegroup_nodes.node_id</code>.
     */
    public Integer getNodeId() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<NamespacedKey, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<NamespacedKey, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<NamespacedKey, Integer> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<NamespacedKey> field1() {
        return PathfinderNodegroupNodes.PATHFINDER_NODEGROUP_NODES.GROUP_KEY;
    }

    @Override
    public Field<Integer> field2() {
        return PathfinderNodegroupNodes.PATHFINDER_NODEGROUP_NODES.NODE_ID;
    }

    @Override
    public NamespacedKey component1() {
        return getGroupKey();
    }

    @Override
    public Integer component2() {
        return getNodeId();
    }

    @Override
    public NamespacedKey value1() {
        return getGroupKey();
    }

    @Override
    public Integer value2() {
        return getNodeId();
    }

    @Override
    public PathfinderNodegroupNodesRecord value1(NamespacedKey value) {
        setGroupKey(value);
        return this;
    }

    @Override
    public PathfinderNodegroupNodesRecord value2(Integer value) {
        setNodeId(value);
        return this;
    }

    @Override
    public PathfinderNodegroupNodesRecord values(NamespacedKey value1, Integer value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PathfinderNodegroupNodesRecord
     */
    public PathfinderNodegroupNodesRecord() {
        super(PathfinderNodegroupNodes.PATHFINDER_NODEGROUP_NODES);
    }

    /**
     * Create a detached, initialised PathfinderNodegroupNodesRecord
     */
    public PathfinderNodegroupNodesRecord(NamespacedKey groupKey, Integer nodeId) {
        super(PathfinderNodegroupNodes.PATHFINDER_NODEGROUP_NODES);

        setGroupKey(groupKey);
        setNodeId(nodeId);
    }
}
